{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","curentIndex","nextButton","props","images","step","frameSize","infinite","lastIndex","length","setState","prevButton","this","itemWidth","animationDuration","prevDisable","nextDisable","className","style","width","map","image","transform","transition","src","alt","indexOf","type","disabled","onClick","React","Component","App","setStep","e","target","value","setWidth","setAnimation","setFrame","setInfinitie","checked","htmlFor","id","max","min","onChange","name","ReactDOM","render","document","getElementById"],"mappings":"uPAgBaA,EAAb,4MACEC,MAAe,CACbC,YAAa,GAFjB,EAKEC,WAAa,WACX,MAKI,EAAKC,MAJPC,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,SAGMN,EAAgB,EAAKD,MAArBC,YACFO,EAAYJ,EAAOK,OAASH,EAElC,EAAKI,SAAS,CACZT,YAAaA,EAAcI,EAAOG,EAC9BA,EACAP,EAAcI,IAGhBJ,IAAgBO,GAAaD,GAC/B,EAAKG,SAAS,CAAET,YAAa,KAvBnC,EA2BEU,WAAa,WACX,MAKI,EAAKR,MAJPC,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,SAGMN,EAAgB,EAAKD,MAArBC,YACFO,EAAYJ,EAAOK,OAASH,EAElC,EAAKI,SAAS,CACZT,YAAaA,EAAcI,EAAO,EAC9BJ,EAAcI,EACd,IAGc,IAAhBJ,GAAqBM,GACvB,EAAKG,SAAS,CAAET,YAAaO,KA7CnC,4CAiDE,WACE,IAAQP,EAAgBW,KAAKZ,MAArBC,YACR,EAMIW,KAAKT,MALPC,EADF,EACEA,OACAS,EAFF,EAEEA,UACAP,EAHF,EAGEA,UACAQ,EAJF,EAIEA,kBACAP,EALF,EAKEA,SAGIQ,EAA8B,IAAhBd,IAAsBM,EACpCS,EAAcf,IAAgBG,EAAOK,OAASH,IAAcC,EAElE,OACE,sBACEU,UAAU,WACVC,MAAO,CACLC,MAAM,GAAD,OAAKN,EAAYP,EAAjB,OAHT,UAME,oBAAIW,UAAU,iBAAd,SACGb,EAAOgB,KAAI,SAAAC,GAAK,OACf,oBACEJ,UAAU,sBAEVC,MAAO,CACLI,UAAU,eAAD,OAAiBrB,EAAcY,EAA/B,OACTU,WAAW,GAAD,OAAKT,EAAL,OALd,SAQE,qBACEU,IAAKH,EACLI,IAAG,UAAKrB,EAAOsB,QAAQL,GAApB,UACHF,MAAON,KAXX,UAEUT,EAAOsB,QAAQL,UAe7B,wBACEM,KAAK,SACLC,SAAUb,EACVc,QAASjB,KAAKD,WAHhB,kBAOA,wBACEgB,KAAK,SACLC,SAAUZ,EACVa,QAASjB,KAAKV,WACd,UAAQ,OAJV,yBA/FR,GAA8B4B,IAAMC,WCHvBC,EAAb,4MACEhC,MAAQ,CACNI,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,KAAM,EACNC,UAAW,EACXO,UAAW,IACXC,kBAAmB,IACnBP,UAAU,GAlBd,EAqBE0B,QAAU,SACRC,GAEA,EAAKxB,SAAS,CAAEL,MAAO6B,EAAEC,OAAOC,SAxBpC,EA2BEC,SAAW,SACTH,GAEA,EAAKxB,SAAS,CAAEG,WAAYqB,EAAEC,OAAOC,SA9BzC,EAiCEE,aAAe,SACbJ,GAEA,EAAKxB,SAAS,CAAEI,mBAAoBoB,EAAEC,OAAOC,SApCjD,EAuCEG,SAAW,SACTL,GAEA,EAAKxB,SAAS,CAAEJ,WAAY4B,EAAEC,OAAOC,SA1CzC,EA6CEI,aAAe,SACbN,GAEA,EAAKxB,SAAS,CAAEH,SAAU2B,EAAEC,OAAOM,WAhDvC,4CAmDE,WACE,MAOI7B,KAAKZ,MANPI,EADF,EACEA,OACAS,EAFF,EAEEA,UACAR,EAHF,EAGEA,KACAC,EAJF,EAIEA,UACAQ,EALF,EAKEA,kBACAP,EANF,EAMEA,SAGF,OACE,sBAAKU,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCb,EAAOK,OAA1C,aAEA,sBAAKQ,UAAU,cAAf,UACE,wBAAOyB,QAAQ,SAAf,uBAEE,uBACEC,GAAG,SACHhB,KAAK,SACLV,UAAU,aACV2B,IAAK,IACLC,IAAK,GACLT,MAAOvB,EACPiC,SAAUlC,KAAKyB,cAInB,wBAAOK,QAAQ,SAAf,iBAEE,uBACEC,GAAG,SACHhB,KAAK,SACLV,UAAU,aACV2B,IAAK,GACLC,IAAK,EACLT,MAAO/B,EACPyC,SAAUlC,KAAKqB,aAInB,wBAAOS,QAAQ,UAAf,uBAEE,uBACEC,GAAG,UACHhB,KAAK,SACLV,UAAU,aACV2B,IAAK,GACLC,IAAK,EACLT,MAAO9B,EACPwC,SAAUlC,KAAK2B,cAInB,uDAEE,uBACEZ,KAAK,SACLV,UAAU,aACV2B,IAAK,IACLC,IAAK,EACLxC,KAAM,IACN+B,MAAOtB,EACPgC,SAAUlC,KAAK0B,kBAInB,8CAEE,uBACEX,KAAK,WACLV,UAAU,aACV8B,KAAK,WACLD,SAAUlC,KAAK4B,qBAKrB,cAAC,EAAD,CACEpC,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXO,UAAWA,EACXC,kBAAmBA,EACnBP,SAAUA,WAxIpB,GAAyBuB,IAAMC,WCV/BiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7bca7963.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  curentIndex: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: State = {\n    curentIndex: 0,\n  };\n\n  nextButton = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const { curentIndex } = this.state;\n    const lastIndex = images.length - frameSize;\n\n    this.setState({\n      curentIndex: curentIndex + step > lastIndex\n        ? lastIndex\n        : curentIndex + step,\n    });\n\n    if (curentIndex === lastIndex && infinite) {\n      this.setState({ curentIndex: 0 });\n    }\n  };\n\n  prevButton = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const { curentIndex } = this.state;\n    const lastIndex = images.length - frameSize;\n\n    this.setState({\n      curentIndex: curentIndex - step > 0\n        ? curentIndex - step\n        : 0,\n    });\n\n    if (curentIndex === 0 && infinite) {\n      this.setState({ curentIndex: lastIndex });\n    }\n  };\n\n  render() {\n    const { curentIndex } = this.state;\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const prevDisable = curentIndex === 0 && !infinite;\n    const nextDisable = curentIndex === images.length - frameSize && !infinite;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map(image => (\n            <li\n              className=\"Carousel__list-item\"\n              key={`${images.indexOf(image)}`}\n              style={{\n                transform: `translateX(-${curentIndex * itemWidth}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${images.indexOf(image)} emoji`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          disabled={prevDisable}\n          onClick={this.prevButton}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          disabled={nextDisable}\n          onClick={this.nextButton}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ntype State = {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setStep = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ step: +e.target.value });\n  };\n\n  setWidth = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ itemWidth: +e.target.value });\n  };\n\n  setAnimation = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ animationDuration: +e.target.value });\n  };\n\n  setFrame = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ frameSize: +e.target.value });\n  };\n\n  setInfinitie = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ infinite: e.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      step,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"App__inputs\">\n          <label htmlFor=\"itemId\">\n            Item width\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              className=\"App__input\"\n              max={260}\n              min={65}\n              value={itemWidth}\n              onChange={this.setWidth}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            Step\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              className=\"App__input\"\n              max={10}\n              min={1}\n              value={step}\n              onChange={this.setStep}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            Frame size\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              className=\"App__input\"\n              max={10}\n              min={1}\n              value={frameSize}\n              onChange={this.setFrame}\n            />\n          </label>\n\n          <label>\n            Animation duration\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              max={5000}\n              min={0}\n              step={500}\n              value={animationDuration}\n              onChange={this.setAnimation}\n            />\n          </label>\n\n          <label>\n            Infinitie\n            <input\n              type=\"checkbox\"\n              className=\"App__input\"\n              name=\"infinite\"\n              onChange={this.setInfinitie}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}